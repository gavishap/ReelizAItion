/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.io/docs/guide/) documentation.  There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b> 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ShotstackSdk) {
      root.ShotstackSdk = {};
    }
    root.ShotstackSdk.TemplateResponseData = factory(root.ShotstackSdk.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The TemplateResponseData model module.
   * @module model/TemplateResponseData
   * @version v1
   */

  /**
   * Constructs a new <code>TemplateResponseData</code>.
   * The response data returned with the [TemplateResponse](#tocs_templateresponse).
   * @alias module:model/TemplateResponseData
   * @class
   * @param message {String} Success response message or error details.
   * @param id {String} The unique id of the template in UUID format.
   */
  var exports = function(message, id) {
    var _this = this;

    _this['message'] = message;
    _this['id'] = id;
  };

  /**
   * Constructs a <code>TemplateResponseData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TemplateResponseData} obj Optional instance to populate.
   * @return {module:model/TemplateResponseData} The populated <code>TemplateResponseData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
    }
    return obj;
  }

  /**
   * Success response message or error details.
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * The unique id of the template in UUID format.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;


  /**
   * Returns Success response message or error details.
   * @return {String}
   */
  exports.prototype.getMessage = function() {
    return this['message'];
  }

  /**
   * Sets Success response message or error details.
   * @param {String} message Success response message or error details.
   */
  exports.prototype.setMessage = function(message) {
    this['message'] = message;
    return this;
  }


  /**
   * Returns The unique id of the template in UUID format.
   * @return {String}
   */
  exports.prototype.getId = function() {
    return this['id'];
  }

  /**
   * Sets The unique id of the template in UUID format.
   * @param {String} id The unique id of the template in UUID format.
   */
  exports.prototype.setId = function(id) {
    this['id'] = id;
    return this;
  }



  return exports;
}));


