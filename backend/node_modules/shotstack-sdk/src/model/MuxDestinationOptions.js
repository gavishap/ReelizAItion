/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.io/docs/guide/) documentation.  There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b> 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ShotstackSdk) {
      root.ShotstackSdk = {};
    }
    root.ShotstackSdk.MuxDestinationOptions = factory(root.ShotstackSdk.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The MuxDestinationOptions model module.
   * @module model/MuxDestinationOptions
   * @version v1
   */

  /**
   * Constructs a new <code>MuxDestinationOptions</code>.
   * Pass additional options to control how Mux processes video. Currently supports playback policy option.
   * @alias module:model/MuxDestinationOptions
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>MuxDestinationOptions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MuxDestinationOptions} obj Optional instance to populate.
   * @return {module:model/MuxDestinationOptions} The populated <code>MuxDestinationOptions</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('playbackPolicy')) {
        obj['playbackPolicy'] = ApiClient.convertToType(data['playbackPolicy'], ['String']);
      }
    }
    return obj;
  }

  /**
   * Sets the Mux `playback_policy` option. Value is an array of strings - use `public`, `signed`, or both.
   * @member {Array.<module:model/MuxDestinationOptions.PlaybackPolicyEnum>} playbackPolicy
   */
  exports.prototype['playbackPolicy'] = undefined;


  /**
   * Returns Sets the Mux `playback_policy` option. Value is an array of strings - use `public`, `signed`, or both.
   * @return {Array.<module:model/MuxDestinationOptions.PlaybackPolicyEnum>}
   */
  exports.prototype.getPlaybackPolicy = function() {
    return this['playbackPolicy'];
  }

  /**
   * Sets Sets the Mux `playback_policy` option. Value is an array of strings - use `public`, `signed`, or both.
   * @param {Array.<module:model/MuxDestinationOptions.PlaybackPolicyEnum>} playbackPolicy Sets the Mux `playback_policy` option. Value is an array of strings - use `public`, `signed`, or both.
   */
  exports.prototype.setPlaybackPolicy = function(playbackPolicy) {
    this['playbackPolicy'] = playbackPolicy;
    return this;
  }


  /**
   * Allowed values for the <code>playbackPolicy</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PlaybackPolicyEnum = {
    /**
     * value: "public"
     * @const
     */
    "public": "public",
    /**
     * value: "signed"
     * @const
     */
    "signed": "signed"  };


  return exports;
}));


